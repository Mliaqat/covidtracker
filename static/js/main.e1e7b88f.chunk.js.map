{"version":3,"sources":["Componet/Navbar.js","Componet/Apifetch.js","Componet/Gridbox.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","createStyles","root","flexGrow","menuButton","marginRight","spacing","title","display","breakpoints","up","search","position","borderRadius","shape","backgroundColor","alpha","palette","common","white","marginLeft","width","searchIcon","padding","height","pointerEvents","alignItems","justifyContent","inputRoot","color","inputInput","paddingLeft","transition","transitions","create","Navbar","classes","className","AppBar","Toolbar","Typography","variant","noWrap","InputBase","placeholder","input","inputProps","Apifetch","a","axios","get","data","recovered","deaths","confirmed","maxWidth","margin","marginTop","paper","textAlign","text","secondary","textTransform","h","Gridbox","useState","dataa","getdataa","useEffect","console","log","getdata","div","Grid","container","Object","keys","map","key","indx","item","xs","sm","Paper","start","end","value","duration","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e1e7b88f.chunk.js","sourcesContent":["import React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport { createStyles, alpha, Theme, makeStyles } from '@material-ui/core/styles';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n  createStyles({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n      flexGrow: 1,\r\n      display: 'none',\r\n      [theme.breakpoints.up('sm')]: {\r\n        display: 'block',\r\n      },\r\n    },\r\n    search: {\r\n      position: 'relative',\r\n      borderRadius: theme.shape.borderRadius,\r\n      backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n      '&:hover': {\r\n        backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n      },\r\n      marginLeft: 0,\r\n      width: '100%',\r\n      [theme.breakpoints.up('sm')]: {\r\n        marginLeft: theme.spacing(1),\r\n        width: 'auto',\r\n      },\r\n    },\r\n    searchIcon: {\r\n      padding: theme.spacing(0, 2),\r\n      height: '100%',\r\n      position: 'absolute',\r\n      pointerEvents: 'none',\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n    },\r\n    inputRoot: {\r\n      color: 'inherit',\r\n    },\r\n    inputInput: {\r\n      padding: theme.spacing(1, 1, 1, 0),\r\n      // vertical padding + font size from searchIcon\r\n      paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n      transition: theme.transitions.create('width'),\r\n      width: '100%',\r\n      [theme.breakpoints.up('sm')]: {\r\n        width: '12ch',\r\n        '&:focus': {\r\n          width: '20ch',\r\n        },\r\n      },\r\n    },\r\n  }),\r\n);\r\n\r\nexport default function Navbar() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n           <Typography className={classes.title} variant=\"h6\" noWrap>\r\n            Covid Tracker\r\n          </Typography>\r\n          <div className={classes.search}>\r\n            <div className={classes.searchIcon}>\r\n              <SearchIcon />\r\n            </div>\r\n            <InputBase\r\n              placeholder=\"Searchâ€¦\"\r\n              classes={{\r\n                root: classes.inputRoot,\r\n                input: classes.inputInput,\r\n              }}\r\n              inputProps={{ 'aria-label': 'search' }}\r\n            />\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n","import axios from \"axios\";\r\nconst url='https://covid19.mathdro.id/api'\r\n\r\nexport const Apifetch= async ()=>{\r\n    try{\r\n        const {data:{recovered,deaths,confirmed}} = await axios.get(url)\r\n        return {confirmed,deaths,recovered};\r\n\r\n\r\n    }catch{\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Apifetch } from './Apifetch';\r\nimport { blue } from '@material-ui/core/colors';\r\nimport CountUp from 'react-countup';\r\n\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n  createStyles({\r\n    root: {\r\n      flexGrow: 2,\r\n      maxWidth: 1000,\r\n      margin: '0 auto',\r\n      marginTop: 100\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(2),\r\n      textAlign: 'center',\r\n      color: theme.palette.text.secondary,\r\n    },\r\n    title: {\r\n      color: 'blue',\r\n      textTransform: 'uppercase'\r\n\r\n    },\r\n    h:{\r\n      textAlign: 'center'\r\n    }\r\n  }),\r\n);\r\n\r\nexport default function Gridbox() {\r\n  const classes = useStyles();\r\n  const [dataa, getdataa] = useState({})\r\n  useEffect(() => {\r\n    async function getdata() {\r\n\r\n      const data = await Apifetch()\r\n      // console.log(data)\r\n      // console.log(Object.keys(data))\r\n\r\n\r\n      getdataa(data)\r\n      console.log(data)\r\n\r\n      return data\r\n    }\r\n    return getdata()\r\n\r\n  }, [])\r\n\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <h1 className={classes.h}>Total Number covid19 Caese In the World</h1>\r\n      <div className={classes.div}>\r\n        <Grid container spacing={3}>\r\n          {Object.keys(dataa).map((key, indx) => {\r\n            return (\r\n              <Grid item xs={12} sm={4} key={indx}>\r\n                <Paper className={classes.paper}>\r\n                  <h3 className={classes.title}>{key}</h3>\r\n                  <CountUp\r\n                    start={0}\r\n                    end={[dataa[key].value]}\r\n                    duration={2.75}\r\n                  />\r\n                  <p>Total Number Of {key} People</p>\r\n\r\n\r\n                </Paper>\r\n              </Grid>\r\n            )\r\n\r\n\r\n\r\n          })}\r\n\r\n\r\n        </Grid>\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n\r\n\r\n}\r\n\r\n","import React from 'react'\nimport Navbar from './Componet/Navbar'\nimport Gridbox from './Componet/Gridbox'\n\n\nexport default function App() {\n  return (\n    <div>\n      <Navbar/>\n      <Gridbox/>\n      \n\n    </div>\n  )\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}